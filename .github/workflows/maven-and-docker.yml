# This workflow builds a package using Maven, builds a Docker image for the app, and it verifies Docker the image.

name: Maven build + Docker

on:
  push:
    branches:
    - main

jobs:
  maven-build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: "Fetch the repository's code to the runner machine"
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: ./mvnw package

    - name: Upload artifact for the docker-build job
      uses: actions/upload-artifact@v3
      with:
        name: java-app
        path: '${{ github.workspace }}/target/*.jar'


  docker-build:

    needs: maven-build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: "Fetch the repository's code to the runner machine"
      uses: actions/checkout@v4

    - name: Download artifact from the maven-build job
      uses: actions/download-artifact@v3
      with:
        name: java-app

    - name: Log in to Docker
      run: docker login ghcr.io -u nyjgit -p ${{ github.token }}

    - name: Build the Docker image
      run: docker build --tag ghcr.io/nyjgit/cubix/1/homework/app:springboot .

    - name: Publish the Docker image to GHCR
      run: docker push ghcr.io/nyjgit/cubix/1/homework/app:springboot
    

  docker-verify:

    needs: docker-build
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: "Fetch the repository's code to the runner machine"
      uses: actions/checkout@v4
      
    - name: Perform verification
      run: ./verify-image.sh
